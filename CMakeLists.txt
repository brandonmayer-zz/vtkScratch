CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(vtkScratch)

SET(CMAKE_CXX_FLAGS "-std=c++0x -fPIC" CACHE STRING "compile flags" FORCE)

FIND_PACKAGE(VTK REQUIRED)
INCLUDE(${VTK_USE_FILE})

FIND_PACKAGE(VXL)
IF(VXL_FOUND)
  INCLUDE(${VXL_CMAKE_DIR}/UseVXL.cmake)
ELSE(VXL_FOUND)
  MESSAGE( FATAL_ERROR "Couldn't find VXL")
ENDIF(VXL_FOUND)

INCLUDE_DIRECTORIES(${VXL_CORE_INCLUDE_DIR})

SET(DEFAULT_DEPENDENCIES vil vbl vul vnl vnl_algo vgl vgl_algo)
  
ADD_EXECUTABLE(samplePoints samplePoints.cxx)
TARGET_LINK_LIBRARIES(samplePoints ${DEFAULT_DEPENDENCIES} ${VTK_LIBRARIES})

ADD_EXECUTABLE(samplePlane samplePlane.cxx)
TARGET_LINK_LIBRARIES(samplePlane ${DEFAULT_DEPENDENCIES} ${VTK_LIBRARIES})

ADD_EXECUTABLE(scatterSVD scatterSVD.cxx)
TARGET_LINK_LIBRARIES(scatterSVD ${DEFAULT_DEPENDENCIES} ${VTK_LIBRARIES})