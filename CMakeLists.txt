CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(vtkScratch)

FIND_PACKAGE(VTK REQUIRED)
INCLUDE(${VTK_USE_FILE})

FIND_PACKAGE(VXL)
IF(VXL_FOUND)
  INCLUDE(${VXL_CMAKE_DIR}/UseVXL.cmake)
ELSE(VXL_FOUND)
  MESSAGE( FATAL_ERROR "Couldn't find VXL")
ENDIF(VXL_FOUND)

INCLUDE_DIRECTORIES(${VXL_CORE_INCLUDE_DIR})
# INCLUDE_DIRECTORIES(${VXL_BRL_INCLUDE_DIR})

# INCLUDE_DIRECTORIES(/home/bm/code/bm/src)
# LINK_DIRECTORIES(${LINK_DIRECTORIES} /home/bm/code/bm/bin/lib)

# SET(BM_INCLUDE_DIR /home/bm/code/bm/src)
# IF(NOT BM_INCLUDE_DIR)
#   SET(BM_INCLUDE_DIR include CACHE PATH "bm source directory")
# ENDIF(NOT BM_INCLUDE_DIR)
# INCLUDE_DIRECTORIES(${BM_INCLUDE_DIR})

# SET(BM_LIBDIR /home/bm/code/bm/bin/lib)
# IF(NOT BM_LIBDIR)
#   SET(BM_LIBDIR include CACHE PATH "bm lib bin directory")
# ENDIF(NOT BM_LIBDIR)
# LINK_DIRECTORIES(${BM_LIBDIR})

SET(DEFAULT_DEPENDENCIES vil vbl vul vnl vnl_algo vgl vgl_algo)
  

SET(CMAKE_CXX_FLAGS "-std=c++0x -fPIC" CACHE STRING "compile flags" FORCE)

ADD_EXECUTABLE(samplePoints samplePoints.cxx)
TARGET_LINK_LIBRARIES(samplePoints ${DEFAULT_DEPENDENCIES} ${VTK_LIBRARIES})

ADD_EXECUTABLE(samplePlane samplePlane.cxx)
TARGET_LINK_LIBRARIES(samplePlane ${DEFAULT_DEPENDENCIES} ${VTK_LIBRARIES})

ADD_EXECUTABLE(scatterSVD scatterSVD.cxx)
TARGET_LINK_LIBRARIES(scatterSVD ${DEFAULT_DEPENDENCIES} ${VTK_LIBRARIES})


# ADD_EXECUTABLE(planeFit1 planeFit1.cxx)
# TARGET_LINK_LIBRARIES(planeFit1 ${DEFAULT_DEPENDENCIES} ${VTK_LIBRARIES})

# ADD_EXECUTABLE(planeFit2 planeFit2.cxx)
# TARGET_LINK_LIBRARIES(planeFit2 ${DEFAULT_DEPENDENCIES} ${VTK_LIBRARIES})

# ADD_EXECUTABLE(planeFit3 planeFit3.cxx)
# TARGET_LINK_LIBRARIES(planeFit3 ${DEFAULT_DEPENDENCIES} ${VTK_LIBRARIES})
